#!/usr/bin/ruby

if (ARGV.length < 2) or (ARGV[0] == '--help') or (ARGV[0] == '-h')
	print "Usage: read_skin_coords.rb foo.svg tag1 [tag2 [...]]\n"
	print "foo.svg is inspected for all tags specified\n"
	print "if any of the tags is not found, returns an error code\n"
	print "if all tags are found, it outputs a .h file with the coordinates\n"
	exit 1
end

svg = ARGV.shift
tags = ARGV.clone

class String
	def starts_with(txt)
		return self.slice(0, txt.length) == txt
	end

	def esc_shell
		return "'#{self.gsub("'", "'\\\\''")}'"
	end
end

class Array
	def esc_shell
		ret = ''
		self.each { |arg|
			ret += ' ' + arg.esc_shell
		}
		return ret
	end
end

coords = Hash.new()

cmd = "inkscape --query-all #{svg.esc_shell}"
f = IO.popen(cmd)
f.each { |line|
	l = line.split(',')
	if(l.length == 5)
		key = l.shift
		#print "key: #{key}"
		if(tags.index(key))
			#print "   match!"
			coords[key] = l
		end
		#print "\n"
	end
}

if coords.length != tags.length
	print "ERROR: skin doesn't have all the tags it should. It must contain all these: #{tags.esc_shell}\n"
	exit(1)
end

out = File.new("skin_coords.h", "w")
out.print "// AUTO-GENERATED by read_skin_coords.rb from #{svg}\n"
coords.each { |tag,row|
	if(tag == 'background')
		x = y = 0;
		height = 150;
		width = 500;
	else
		x, y, w, h = row
		x = x.to_i
		y = y.to_i
		h = h.to_i
		w = w.to_i
		width  = (x + w).ceil
		x = x.floor
		width -= x
		height = (y + h).ceil
		y = y.floor
		height -= y

		# Either the coordinates are innacurate, or I'm rounding the wrong
		# way, also coordinates do not seem to include anti-aliasing pixels
		# or blurs.
		y -= 2;
		x -= 2;
		height += 5;
		width += 5;
	end
	out.print "\n"
	out.print "#define SKIN_#{tag.upcase}_LEFT #{x}\n"
	out.print "#define SKIN_#{tag.upcase}_TOP #{y}\n"
	out.print "#define SKIN_#{tag.upcase}_WIDTH #{width}\n"
	out.print "#define SKIN_#{tag.upcase}_HEIGHT #{height}\n"
	system("inkscape --export-id=#{tag.esc_shell} --export-id-only --export-area=#{x}:#{150-y-height}:#{x+width}:#{150-y} --export-width=#{width} --export-png='skin/#{tag}.png' #{svg}\n")
}
